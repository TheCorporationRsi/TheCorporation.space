version: '3'

volumes:
  static: {}
  db_storage: {}

services:

  bots:
    build: ./bots
    container_name: bots
    restart: always
    env_file:  .env
    environment:
      DISCORD_BOT_TOKEN: ${DISCORD_TEST_BOT_TOKEN}
    ports:
      - "5003:8000"
    expose:
      - "8000"
    command: bash -c "python3 discord_shell_bot.py" 
    depends_on:
      - flask

  flask:
    build: ./flask
    container_name: flask
    restart: always
    volumes:
      - type: volume
        source: static
        target: /home/thecorporation/website/project/static
      - type: volume
        source: db_storage
        target: /home/thecorporation/website/project/databases
    env_file:  .env
    environment:
      APP_NAME: ${APP_NAME}
      SECRET_KEY: ${SECRET_KEY}
      SQLALCHEMY_DATABASE_URI: sqlite:////home/thecorporation/website/project/databases/user.db
      SQLALCHEMY_DATABASE_URI_FUNDING: sqlite:////home/thecorporation/website/project/databases/funding.db
      SQLALCHEMY_DATABASE_TEST_URI: sqlite:////home/thecorporation/website/project/databases/test.db
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      DISCORD_ID: ${DISCORD_ID}
      DISCORD_SECRET: ${DISCORD_SECRET}
      DISCORD_BOT_TOKEN: ${DISCORD_BOT_TOKEN}
      DISCORD_PUBLIC_KEY: ${DISCORD_PUBLIC_KEY}
      DISCORD_REDIRECT_URI=https: https://localhost/discord_callback
      RECAP_PRVKEY: ${RECAP_PRVKEY}
      RECAP_PUBKEY: ${RECAP_PUBKEY}
      DISCORD_TEST_SERVER: ${DISCORD_TEST_SERVER}
      FLASK_DEBUG: 1
      FLASK_ENV: development   #production
      FLASK_APP: app.py
      CERT_EMAIL_ADDRESS: ${CERT_EMAIL_ADDRESS}
      FLASK_RUN_HOST: 0.0.0.0
      FLASK_RUN_PORT: 80
      RECAPTCHA_ENABLED: False
    ports:
      - "5002:8000"
    expose: 
      - "8000"
    command: bash -c "cp -R /home/thecorporation/website/project/temp/static/* /home/thecorporation/website/project/static && gunicorn -k geventwebsocket.gunicorn.workers.GeventWebSocketWorker -w 1 -b 0.0.0.0:8000 --preload app:app" 